{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/josieincase/Documents/Git/fml/screens/ChoosePwScreen.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UILogo from \"../components/UILogo\";\nimport colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\n\nvar ChoosePwScreen = function ChoosePwScreen(props) {\n  return React.createElement(View, {\n    style: styles.imageBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, React.createElement(UILogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"W\\xE4hle ein Passwort\")), React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Pressable, {\n    style: styles.button1,\n    onPress: function onPress() {\n      return Alert.alert(\"am pressed omg\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, props.title))));\n};\n\nvar styles = StyleSheet.create({\n  imageBox: {\n    flex: 1,\n    flexDirection: \"column\",\n    paddingHorizontal: 60,\n    paddingVertical: 60,\n    justifyContent: \"space-between\"\n  },\n  title: {\n    color: colors.mainG,\n    marginTop: 40,\n    fontSize: 32,\n    lineHeight: 36\n  },\n  button: {\n    elevation: 5,\n    alignItems: \"center\"\n  },\n  text: {\n    color: colors.mainLG,\n    fontSize: 16,\n    lineHeight: 21,\n    letterSpacing: 0.25\n  },\n  text2: {\n    color: colors.mainG,\n    fontSize: 20\n  },\n  button1: {\n    borderRadius: 8,\n    height: 40,\n    width: 80,\n    elevation: 3,\n    backgroundColor: colors.accBlue,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default ChoosePwScreen;","map":{"version":3,"sources":["/Users/josieincase/Documents/Git/fml/screens/ChoosePwScreen.js"],"names":["React","useState","UILogo","colors","Input","ChoosePwScreen","props","styles","imageBox","title","text2","button","button1","Alert","alert","text","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingVertical","justifyContent","color","mainG","marginTop","fontSize","lineHeight","elevation","alignItems","mainLG","letterSpacing","borderRadius","height","width","backgroundColor","accBlue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAFF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,OADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACC,KAAN,CAAY,gBAAZ,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BT,KAAK,CAACG,KAAjC,CAJF,CADF,CATF,CADF;AAoBD,CArBD;;AA4BA,IAAMF,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,QAAQ,EAAE;AACRU,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,aAAa,EAAE,QAFP;AAGRC,IAAAA,iBAAiB,EAAE,EAHX;AAIRC,IAAAA,eAAe,EAAE,EAJT;AAKRC,IAAAA,cAAc,EAAE;AALR,GADqB;AAQ/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,KAAK,EAAEpB,MAAM,CAACqB,KADT;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE;AAJP,GARwB;AAc/BhB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,SAAS,EAAE,CADL;AAENC,IAAAA,UAAU,EAAE;AAFN,GAduB;AAkB/Bd,EAAAA,IAAI,EAAE;AACJQ,IAAAA,KAAK,EAAEpB,MAAM,CAAC2B,MADV;AAEJJ,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE,EAHR;AAIJI,IAAAA,aAAa,EAAE;AAJX,GAlByB;AAyB/BrB,EAAAA,KAAK,EAAE;AACLa,IAAAA,KAAK,EAAEpB,MAAM,CAACqB,KADT;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAzBwB;AA8B/Bd,EAAAA,OAAO,EAAE;AACPoB,IAAAA,YAAY,EAAE,CADP;AAEPC,IAAAA,MAAM,EAAE,EAFD;AAGPC,IAAAA,KAAK,EAAE,EAHA;AAIPN,IAAAA,SAAS,EAAE,CAJJ;AAKPO,IAAAA,eAAe,EAAEhC,MAAM,CAACiC,OALjB;AAMPP,IAAAA,UAAU,EAAE,QANL;AAOPP,IAAAA,cAAc,EAAE;AAPT;AA9BsB,CAAlB,CAAf;AAyCA,eAAejB,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Image, Alert, Pressable, Text } from \"react-native\";\nimport UILogo from \"../components/UILogo\";\nimport colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\n\nconst ChoosePwScreen = (props) => {\n  return (\n    <View style={styles.imageBox}>\n      <View style={{}}>\n        <UILogo />\n        <View style={styles.title}>\n          <Text style={styles.text2}>Wähle ein Passwort</Text>\n        </View>\n        <Input />\n      </View>\n\n      <View style={styles.button}>\n        <Pressable\n          style={styles.button1}\n          onPress={() => Alert.alert(\"am pressed omg\")}\n        >\n          <Text style={styles.text}>{props.title}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n//quick reminder: Button gehört zum Navigation Component. Touchable Opacity wär noch cool.\n//UI Logo muss auch n eigenes Component sein\n//scheinbar muss man das Image ding noch resizen mit nem extra.. DDing\n//https://www.skptricks.com/2018/11/react-native-responsive-image-scale-to-fit-example.html\n//Der button hat irgendwann seine default width vergessen wtf..\n\nconst styles = StyleSheet.create({\n  imageBox: {\n    flex: 1,\n    flexDirection: \"column\",\n    paddingHorizontal: 60,\n    paddingVertical: 60,\n    justifyContent: \"space-between\",\n  },\n  title: {\n    color: colors.mainG,\n    marginTop: 40,\n    fontSize: 32,\n    lineHeight: 36,\n  },\n  button: {\n    elevation: 5,\n    alignItems: \"center\",\n  },\n  text: {\n    color: colors.mainLG,\n    fontSize: 16,\n    lineHeight: 21,\n    letterSpacing: 0.25,\n  },\n\n  text2: {\n    color: colors.mainG,\n    fontSize: 20,\n  },\n\n  button1: {\n    borderRadius: 8,\n    height: 40,\n    width: 80,\n    elevation: 3,\n    backgroundColor: colors.accBlue,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default ChoosePwScreen;\n/**\n * \n *  <UILogo log={require(\"../assets/iE-wdltA.png\")} />\n * Wollte die Source nich tnehmen :(\n\n */\n"]},"metadata":{},"sourceType":"module"}